{"version":3,"file":"static/js/724.b33fdfef.chunk.js","mappings":"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","sources":["components/MusicPlayer.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useMemo } from \"react\";\nimport {\n  MdPlayArrow,\n  MdPause,\n  MdSkipNext,\n  MdSkipPrevious,\n  MdVolumeUp,\n  MdVolumeDown,\n  MdVolumeMute,\n} from \"react-icons/md\";\nimport \"../styles/MusicPlayer.css\";\n\nimport BoleritoStapelia from \"../assets/music/Bolerito de Stapelia.mp3\";\nimport Frio from \"../assets/music/Frio.mp3\";\nimport Girasoles from \"../assets/music/Girasoles.mp3\";\nimport Limonero from \"../assets/music/Limonero.mp3\";\nimport MariposaOrigami from \"../assets/music/Mariposa Origami.mp3\";\nimport Oceanica from \"../assets/music/Oceanica.mp3\";\nimport Manneporte from \"../assets/music/The Manneporte.mp3\";\nimport OceanicaNylon from \"../assets/music/Oceanica Nylon.mp3\";\n\nimport { motion } from \"framer-motion\";\n\nconst MusicPlayer = () => {\n  const audioRef = useRef(null);\n  const volumeSliderRef = useRef(null);\n  const progressBarRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\n  const [currentSong, setCurrentSong] = useState({});\n  const [progress, setProgress] = useState(0);\n  const [isSeeking, setIsSeeking] = useState(false);\n  const [volume, setVolume] = useState(100);\n  const [isVolumeSliderVisible, setIsVolumeSliderVisible] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n\n  const songs = useMemo(\n    () => [\n      { title: \"Oceanica\", source: Oceanica },\n      { title: \"Girasoles\", source: Girasoles },\n      { title: \"Limonero\", source: Limonero },\n      { title: \"Bolerito de Stapelia\", source: BoleritoStapelia },\n      { title: \"The Manneporte\", source: Manneporte },\n      { title: \"Frio\", source: Frio },\n      { title: \"Mariposa Origami\", source: MariposaOrigami },\n      { title: \"Oceanica Nylon - Acústico\", source: OceanicaNylon },\n    ],\n    []\n  );\n\n  useEffect(() => {\n    audioRef.current.src = songs[currentSongIndex].source;\n    setCurrentSong(songs[currentSongIndex]);\n\n    // Precargar la canción actual\n    audioRef.current.load();\n  }, [currentSongIndex, songs]);\n\n  // Efecto para actualizar el estilo de la barra de progreso\n  useEffect(() => {\n    if (progressBarRef.current) {\n      // Crear la variable CSS personalizada para el progreso\n      progressBarRef.current.style.setProperty('--progress-percent', `${progress}%`);\n    }\n  }, [progress]);\n\n  // Formatear tiempo en formato mm:ss\n  const formatTime = (timeInSeconds) => {\n    const minutes = Math.floor(timeInSeconds / 60);\n    const seconds = Math.floor(timeInSeconds % 60);\n    return `${minutes}:${seconds < 10 ? \"0\" : \"\"}${seconds}`;\n  };\n\n  const handlePlayPause = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n    } else {\n      audioRef.current.play().catch(error => {\n        console.error(\"Error al reproducir audio:\", error);\n      });\n    }\n    setIsPlaying(!isPlaying);\n  };\n\n  const handleNextSong = () => {\n    const nextIndex = (currentSongIndex + 1) % songs.length;\n    setCurrentSongIndex(nextIndex);\n  };\n\n  const handlePreviousSong = () => {\n    const previousIndex = (currentSongIndex - 1 + songs.length) % songs.length;\n    setCurrentSongIndex(previousIndex);\n  };\n\n  const handleTimeUpdate = () => {\n    const currentTime = audioRef.current.currentTime;\n    const duration = audioRef.current.duration || 0;\n    const progressPercentage = duration > 0 ? (currentTime / duration) * 100 : 0;\n\n    if (!isSeeking) {\n      setProgress(progressPercentage);\n      setCurrentTime(currentTime);\n      setDuration(duration);\n    }\n  };\n\n  const handleLoadedMetadata = () => {\n    setDuration(audioRef.current.duration);\n  };\n\n  const handleSeek = (e) => {\n    const newValue = parseFloat(e.target.value);\n    const seekTime = (newValue / 100) * (audioRef.current.duration || 0);\n\n    if (!isNaN(seekTime) && isFinite(seekTime)) {\n      audioRef.current.currentTime = seekTime;\n      setProgress(newValue);\n      setCurrentTime(seekTime);\n    }\n  };\n\n  const handleSeekStart = () => {\n    setIsSeeking(true);\n  };\n\n  const handleSeekEnd = () => {\n    setIsSeeking(false);\n  };\n\n  const handleSongEnd = () => {\n    handleNextSong();\n  };\n\n  const handleVolumeIconClick = (e) => {\n    if (volumeSliderRef.current?.contains(e.target)) {\n      return;\n    }\n    setIsVolumeSliderVisible(!isVolumeSliderVisible);\n  };\n\n  const handleVolume = (e) => {\n    const newVolume = Number(e.target.value);\n    audioRef.current.volume = newVolume / 100;\n    setVolume(newVolume);\n  };\n\n  // Manejo de teclas para accesibilidad\n  const handleKeyDown = (e, action) => {\n    if (e.key === \"Enter\" || e.key === \" \") {\n      e.preventDefault();\n      action();\n    }\n  };\n\n  // Manejar teclas para control de volumen\n  const handleVolumeKeyDown = (e) => {\n    if (e.key === \"ArrowUp\") {\n      e.preventDefault();\n      const newVolume = Math.min(volume + 5, 100);\n      audioRef.current.volume = newVolume / 100;\n      setVolume(newVolume);\n    } else if (e.key === \"ArrowDown\") {\n      e.preventDefault();\n      const newVolume = Math.max(volume - 5, 0);\n      audioRef.current.volume = newVolume / 100;\n      setVolume(newVolume);\n    }\n  };\n\n  const getVolumeIcon = () => {\n    if (volume === 0) {\n      return <MdVolumeMute size={24} aria-hidden=\"true\" />;\n    } else if (volume <= 50) {\n      return <MdVolumeDown size={24} aria-hidden=\"true\" />;\n    } else {\n      return <MdVolumeUp size={24} aria-hidden=\"true\" />;\n    }\n  };\n\n  return (\n    <motion.div\n      className=\"music-player-container\"\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5 }}\n      role=\"region\"\n      aria-label=\"Reproductor de música de Nubila\"\n    >\n      <motion.div\n        className=\"music-player\"\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        <motion.div\n          className=\"volume-control\"\n          whileHover={{ scale: 1 }}\n          initial={{ opacity: 0, scale: 0.8 }}\n          animate={{ opacity: 1, scale: 1 }}\n          transition={{ duration: 0.3 }}\n        >\n          <motion.div\n            className=\"volume-icon\"\n            onClick={handleVolumeIconClick}\n            onMouseLeave={() => setIsVolumeSliderVisible(false)}\n            onMouseEnter={() => setIsVolumeSliderVisible(true)}\n            onKeyDown={handleVolumeKeyDown}\n            whileHover={{ scale: 1 }}\n            initial={{ opacity: 0, scale: 0.8 }}\n            animate={{ opacity: 1, scale: 1 }}\n            transition={{ duration: 0.3 }}\n            role=\"button\"\n            tabIndex=\"0\"\n            aria-label={`Control de volumen: ${volume}%`}\n            aria-expanded={isVolumeSliderVisible}\n            aria-haspopup=\"true\"\n          >\n            {getVolumeIcon()}\n\n            {isVolumeSliderVisible && (\n              <motion.div\n                className=\"volume-slider-container\"\n                initial={{ opacity: 0, scale: 0.5 }}\n                animate={{ opacity: 1, scale: 1 }}\n                exit={{ opacity: 0, scale: 0.5 }}\n                transition={{ duration: 0.3 }}\n                role=\"dialog\"\n                aria-label=\"Ajustar volumen\"\n              >\n                <label htmlFor=\"volume-slider\" className=\"sr-only\">\n                  Volumen\n                </label>\n                <input\n                  ref={volumeSliderRef}\n                  id=\"volume-slider\"\n                  type=\"range\"\n                  className=\"volume-slider\"\n                  value={volume}\n                  min=\"0\"\n                  max=\"100\"\n                  step=\"1\"\n                  onChange={handleVolume}\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                  aria-valuenow={volume}\n                  aria-valuetext={`${volume}%`}\n                />\n              </motion.div>\n            )}\n          </motion.div>\n        </motion.div>\n        <div className=\"song-info\">\n          <div className=\"song-title\" aria-live=\"polite\">\n            <span aria-label=\"Título de la canción\">{currentSong.title}</span>\n          </div>\n          <div className=\"progress-container\">\n            <span className=\"time-display\" aria-hidden=\"true\">\n              {formatTime(currentTime)}\n            </span>\n            <label htmlFor=\"progress-bar\" className=\"sr-only\">\n              Progreso de la canción: {formatTime(currentTime)} de {formatTime(duration)}\n            </label>\n            <div className=\"progress-bar-wrapper\">\n              <input\n                ref={progressBarRef}\n                id=\"progress-bar\"\n                type=\"range\"\n                className=\"progress-bar\"\n                value={progress}\n                min=\"0\"\n                max=\"100\"\n                step=\"0.1\"\n                onChange={handleSeek}\n                onMouseDown={handleSeekStart}\n                onMouseUp={handleSeekEnd}\n                onTouchStart={handleSeekStart}\n                onTouchEnd={handleSeekEnd}\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={Math.round(progress)}\n                aria-valuetext={`${formatTime(currentTime)} de ${formatTime(duration)}`}\n                style={{ \"--progress-percent\": `${progress}%` }}\n              />\n            </div>\n            <span className=\"time-display\" aria-hidden=\"true\">\n              {formatTime(duration)}\n            </span>\n          </div>\n        </div>\n        <div className=\"controls\" role=\"toolbar\" aria-label=\"Controles de reproducción\">\n          <button\n            onClick={handlePreviousSong}\n            onKeyDown={(e) => handleKeyDown(e, handlePreviousSong)}\n            aria-label=\"Canción anterior\"\n            title=\"Canción anterior\"\n          >\n            <MdSkipPrevious aria-hidden=\"true\" />\n          </button>\n          <button\n            onClick={handlePlayPause}\n            onKeyDown={(e) => handleKeyDown(e, handlePlayPause)}\n            aria-label={isPlaying ? \"Pausar\" : \"Reproducir\"}\n            title={isPlaying ? \"Pausar\" : \"Reproducir\"}\n          >\n            {isPlaying ? <MdPause aria-hidden=\"true\" /> : <MdPlayArrow aria-hidden=\"true\" />}\n          </button>\n          <button\n            onClick={handleNextSong}\n            onKeyDown={(e) => handleKeyDown(e, handleNextSong)}\n            aria-label=\"Siguiente canción\"\n            title=\"Siguiente canción\"\n          >\n            <MdSkipNext aria-hidden=\"true\" />\n          </button>\n        </div>\n      </motion.div>\n\n      <audio\n        ref={audioRef}\n        autoPlay={isPlaying}\n        onTimeUpdate={handleTimeUpdate}\n        onLoadedMetadata={handleLoadedMetadata}\n        onEnded={handleSongEnd}\n        preload=\"metadata\"\n        aria-hidden=\"true\"\n      >\n        <p>Tu navegador no soporta el elemento de audio.</p>\n      </audio>\n\n      {/* Announcer para lectores de pantalla */}\n      <div className=\"sr-only\" aria-live=\"polite\">\n        {isPlaying ? `Reproduciendo: ${currentSong.title}` : `Pausado: ${currentSong.title}`}\n      </div>\n\n    </motion.div>\n  );\n};\n\nexport default MusicPlayer;"],"names":["MusicPlayer","audioRef","useRef","volumeSliderRef","progressBarRef","isPlaying","setIsPlaying","useState","currentSongIndex","setCurrentSongIndex","currentSong","setCurrentSong","progress","setProgress","isSeeking","setIsSeeking","volume","setVolume","isVolumeSliderVisible","setIsVolumeSliderVisible","currentTime","setCurrentTime","duration","setDuration","songs","useMemo","title","source","Oceanica","Girasoles","Limonero","BoleritoStapelia","Manneporte","Frio","MariposaOrigami","OceanicaNylon","useEffect","current","src","load","style","setProperty","formatTime","timeInSeconds","minutes","Math","floor","seconds","handlePlayPause","pause","play","catch","error","console","handleNextSong","nextIndex","length","handlePreviousSong","previousIndex","handleSeekStart","handleSeekEnd","handleKeyDown","e","action","key","preventDefault","_jsxs","motion","div","className","initial","opacity","y","animate","transition","role","children","_jsx","whileHover","scale","onClick","_volumeSliderRef$curr","contains","target","onMouseLeave","onMouseEnter","onKeyDown","newVolume","min","max","tabIndex","MdVolumeMute","size","MdVolumeDown","MdVolumeUp","exit","htmlFor","ref","id","type","value","step","onChange","Number","newValue","parseFloat","seekTime","isNaN","isFinite","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","round","MdSkipPrevious","MdPause","MdPlayArrow","MdSkipNext","autoPlay","onTimeUpdate","handleTimeUpdate","onLoadedMetadata","handleLoadedMetadata","onEnded","handleSongEnd","preload"],"sourceRoot":""}